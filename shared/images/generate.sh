#!/bin/bash

set -eu

GENERATED_HEADER='###
### DO NOT MODIFY THIS FILE. THIS FILE HAS BEEN AUTOGENERATED
###
'
SHARED_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
MANIFEST_SOURCE="${MANIFEST_SOURCE:-https://raw.githubusercontent.com/docker-library/official-images/master/library/${BASE_REPO}}"
IMAGE_CUSTOMIZATIONS=${IMAGE_CUSTOMIZATIONS:-}
TEMPLATE=${TEMPLATE:-base}
VARIANTS=${VARIANTS:-none}
TAG_FILTER="${TAG_FILTER:-cat}"
TAG_INCLUDE_FILTER="${TAG_INCLUDE_FILTER:-cat}"
ORGANIZATION=${ORGANIZATION:-ghcr.io/leliuga}
ORGANIZATION_REPO=${ORGANIZATION_REPO:-"$ORGANIZATION/$BASE_REPO"}

find_tags_and_aliases() {
    curl --silent --location --fail --retry 3 "$MANIFEST_SOURCE" |
        grep Tags |
        sed 's/^.*Tags: //g' |
        ${TAG_FILTER} |
        ${TAG_INCLUDE_FILTER} |
        sed 's/, /:/' |
        sed 's/, /,/g' |
        sort
}

find_template() {
    PREFIX=$1
    template=$2

    if [ -e "$(dirname pwd)/resources/$PREFIX-${template}.template" ]; then
        echo "$(dirname pwd)/resources/$PREFIX-${template}.template"
        exit 0
    fi

    if [ -e "${SHARED_DIR}/$PREFIX-${template}.template" ]; then
        echo "${SHARED_DIR}/$PREFIX-${template}.template"
        exit 0
    fi

    exit 1
}
function render_containerfile_template() {
    TEMP=$(mktemp)
    TEMPLATE_PATH=$(find_template Containerfile "$1")

    printf "%s\n" "${IMAGE_CUSTOMIZATIONS}" >"$TEMP"
    echo "$GENERATED_HEADER"

    cat "$TEMPLATE_PATH" |
        sed "s|{{BASE_IMAGE}}|$BASE_IMAGE|g" |
        sed "/# BEGIN IMAGE CUSTOMIZATIONS/ r $TEMP" |
        sed "s|{{TITLE}}|$TITLE|g"

    rm "$TEMP"
}

for tag_aliases in $(find_tags_and_aliases); do
    tag=$(echo "$tag_aliases" | cut -d: -f1)
    aliases=""

    if $(echo "$tag_aliases" | grep -q :); then
        aliases=$(echo "$tag_aliases" | cut -d: -f2)
    fi

    echo Generating "$(basename "$(pwd)")" "$tag" Containerfile
    mkdir -p "images/$tag"

    BASE_IMAGE=${BASE_REPO}:${tag}
    render_containerfile_template "$TEMPLATE" >"images/$tag/Containerfile"
    echo "${tag}" >"images/$tag/TAG"
    echo "${aliases}" >"images/$tag/ALIASES"

    # variants based on the base image
    if [ "$VARIANTS" != "none" ]; then
        for variant in ${VARIANTS[@]}; do
            echo " + including $variant variant"
            mkdir -p "images/$tag/$variant"

            BASE_IMAGE="$ORGANIZATION_REPO:$tag"
            render_containerfile_template "$variant" > "images/$tag/$variant/Containerfile"
            echo "$tag-$variant" > "images/$tag/$variant/TAG"
            if [[ "${aliases}" ]]; then
                echo "$aliases-$variant" | sed "s|,|-$variant,|g" > "images/$tag/$variant/ALIASES"
            else
                echo '' > "images/$tag/$variant/ALIASES"
            fi
        done
    fi
done
